webpackJsonp([0x81b8806e4260],{590:function(e,t){e.exports={data:{site:{siteMetadata:{title:"Step Over",subtitle:"有趣的灵魂终会相遇",copyright:"© All rights reserved.",menu:[{label:"文章",path:"/"},{label:"关于我",path:"/about/"},{label:"联系我",path:"/contact/"}],author:{name:"周骅",email:"zhou--hua@163.com",github:"zhouhua-js",rss:"#"}}},allMarkdownRemark:{edges:[{node:{excerpt:"…",fields:{slug:"/2017/rabbit/",categorySlug:null},frontmatter:{title:"从拥挤的兔子到伪随机数算法",date:"2017-07-30T10:00:00.000Z",category:null,description:""}}},{node:{excerpt:"前两天在 知乎 上看到了一个关于快速排序算法性能的问题，我简单总结了一个优化思路，现在在自己的博客里也贴一下吧，版权都是我的。 其实里面的大部分内容在我的另一篇博客里有讲过： 深入了解javascript的sort方法 原回答： https://www.zhihu.com…",fields:{slug:"/2016/optimizequicksort/",categorySlug:null},frontmatter:{title:"快速排序算法的优化思路总结",date:"2016-01-11T10:51:24.000Z",category:null,description:""}}},{node:{excerpt:"在javascript中，数组对象有一个有趣的方法  sort ，它接收一个类型为函数的参数作为排序的依据。这意味着开发者只需要关注如何比较两个值的大小，而不用管“排序”这件事内部是如何实现的。不过了解一下sort…",fields:{slug:"/2015/quicksort/",categorySlug:null},frontmatter:{title:"深入了解javascript的sort方法",date:"2015-06-18T12:08:03.000Z",category:null,description:null}}},{node:{excerpt:"起 有一天，我在打理博客的时候，无意看到了这样的提示： “按tab可通过zhouhua.info进行搜索”？这是什么？于是我按了tab： 看起来很高级嘛！输入“正则表达式”看看： 竟然真的有效果！到底发生了什么…… 打开chrome…",fields:{slug:"/2015/opensearch/",categorySlug:null},frontmatter:{title:"让你的网站成为自定义搜索引擎",date:"2015-06-05T23:27:56.000Z",category:null,description:null}}},{node:{excerpt:"不知才哪儿看来的： 如果你有一个问题，你想到可以用正则来解决，那么你有两个问题了。 我觉得正则表达式实在是一种人难以理解的语言，比xml…",fields:{slug:"/2015/trap/",categorySlug:null},frontmatter:{title:"小心别落入正则回溯陷阱",date:"2015-06-02T00:52:15.000Z",category:null,description:null}}},{node:{excerpt:"自古js多奇葩，语言层面上有许多坑，入坑多了也就习惯了。那就再多一个坑吧。 javascript在判断两个值是否相等时，有两种方式  和  。这两者的区别我就不多说了，随便一本js…",fields:{slug:"/2015/equal/",categorySlug:null},frontmatter:{title:"“===”也有不靠谱的时候",date:"2015-05-08T20:12:30.000Z",category:null,description:null}}},{node:{excerpt:"好久没更新内容了，今天分享一个小的知识点，一个正则表达式方面的很容易被人忽视的坑。 我们知道，正则表达式中，可以用  表示任意单个字符，但在underscore和jquery…",fields:{slug:"/2015/dot/",categorySlug:null},frontmatter:{title:"谈谈正则表达式中的“.”",date:"2015-05-07T23:57:29.000Z",category:null,description:null}}},{node:{excerpt:"…",fields:{slug:"/2015/validation/",categorySlug:null},frontmatter:{title:"干货！一步步实现自己的表单验证器",date:"2015-04-15T17:21:57.000Z",category:null,description:null}}},{node:{excerpt:"今天上午刷到一道题，大体是写一个方法判断一个单词中是否有重复的字母（或者说一个字符串中是否有重复的字符）。我的思路是一个字符一个字符地遍历，如果发现有重复的停止： 这种简单的场景下谈性能没什么意义，两次循环速度并不慢（  也认为是一次循环，但由于是native…",fields:{slug:"/2015/isisogram/",categorySlug:null},frontmatter:{title:"巧妙判断一个单词是否有重复字母",date:"2015-04-07T15:10:10.000Z",category:null,description:null}}},{node:{excerpt:"背景 在一个页面A中，点击一个链接，浏览器会跳转到页面B。那么如何描述A和B的关系呢？我们把A定义为B的refer/referrer/referer（由于历史的原因，你看到上面这几个词都可以认为是同一个意思，下面统一描述为referrer）。通俗地说，A是B…",fields:{slug:"/2015/noreferrer/",categorySlug:null},frontmatter:{title:"聊聊rel=noreferrer的事",date:"2015-03-31T17:47:49.000Z",category:null,description:null}}},{node:{excerpt:"当年去携程面试时，刘大师问了一个判断回文字符串（类似于123454321）的方法，我是有备而来，刷刷就写了：  So easy。不过刘大师不喜欢这种geek范的东西，只好老老实实又写了一份循环版的……C…",fields:{slug:"/2015/palindromic/",categorySlug:null},frontmatter:{title:"判断回文字符串的新方法",date:"2015-03-26T15:14:04.000Z",category:null,description:null}}},{node:{excerpt:"Box-shadow虽然是一个css3的属性，但由于浏览器支持不错，且用它来营造一种立体感、层次感着实方便，这让它成为了互联网上随处可见的css…",fields:{slug:"/2015/shadow/",categorySlug:null},frontmatter:{title:"更优雅地绘制阴影",date:"2015-03-24T18:12:43.000Z",category:null,description:null}}},{node:{excerpt:"css3的rgba色彩模式、png/gif图片的alpha通道、canvas的rgba色彩模式、css3的阴影、css3的opacity属性等等，这些应用在网页中，有意无意间，我们的页面多了许多半透明的效果。我们知道，在没有alpha…",fields:{slug:"/2015/color/",categorySlug:null},frontmatter:{title:"带Alpha通道的色彩叠加问题",date:"2015-03-23T17:05:23.000Z",category:null,description:null}}},{node:{excerpt:"在以前的博文 别说不可能，nodejs中实现sleep 中，我向大家介绍了nodejs addon的用法。今天的主题还是addon，继续挖掘c/c++的能力，弥补nodejs的弱点。 我曾多次提到过nodejs的性能问题。其实就语言本身而言，nodejs…",fields:{slug:"/2015/thread/",categorySlug:null},frontmatter:{title:"在nodejs中使用多线程编程",date:"2015-03-16T15:29:53.000Z",category:null,description:null}}},{node:{excerpt:"问题引入：实现如下效果 两个方块的追逐效果，使用css3，实现起来没什么难度： 用到了css3的animate属性，不是很复杂。不过出于兼容性的考虑，我们决定使用jquery的animate方法来重新实现。 简单粗暴地多次使用$.animate…",fields:{slug:"/2015/easing/",categorySlug:null},frontmatter:{title:"学写jquery缓动函数",date:"2015-03-10T16:31:50.000Z",category:null,description:null}}},{node:{excerpt:"nodejs最让人不爽的就是其单线程特性，很多事情没法做，对CPU密集型的场景，性能也不够强劲。很长一段时间，我想在javascript语言框架下寻求一些解决方案，解决无法操作线程、性能差的问题。曾经最让我印象深刻的方案是 fibers ，不过fibers…",fields:{slug:"/2015/sleep/",categorySlug:null},frontmatter:{title:"别说不可能，nodejs中实现sleep",date:"2015-03-04T15:34:22.000Z",category:null,description:null}}},{node:{excerpt:"CSS3中新增了许多background类的属性。今天就来聊聊 background-clip 和 background-origin 。为什么把它们俩放一起说呢？因为它们俩很“默契”地拥有相同的属性值。 background-clip 先说 background-clip…",fields:{slug:"/2015/background/",categorySlug:null},frontmatter:{title:"必会CSS3技能：background-clip/background-origin",date:"2015-03-03T11:46:54.000Z",category:null,description:null}}},{node:{excerpt:"前言 kindle看书挺舒服的，网页上看到大段文字就想搬到kindle里去。以前会用一些转寄的服务，网页上随手点个send to kindle，倒也方便。嗯……还是不要自欺欺人了，read it later === read it never…",fields:{slug:"/2015/kindle/",categorySlug:null},frontmatter:{title:"phantomjs配合kindlegen，kindle看天涯不费力",date:"2015-02-27T22:59:13.000Z",category:null,description:null}}},{node:{excerpt:"javascript 有一个鲜为人知的运算符，叫“趋向于”， 写作 — >  。可以声明一个变量 然后让它趋向于另一个数。 就会打印9,8,7,6,5,4,3,2,1,0 了 2333333 认真就输了",fields:{slug:"/2015/joke/",categorySlug:null},frontmatter:{title:"长姿势",date:"2015-01-09T13:07:36.000Z",category:null,description:null}}},{node:{excerpt:"今天要说一个很基础，但被我自己忽略至今的一个简单问题：padding、margin在纵向取值为百分数时，它们相对的是父元素的高度吗？ 这个问题之所以被忽略，是因为使用场景有限。因为在布局的时候，我们通常只关注宽度，流式布局、响应式布局中，我们常常会给padding…",fields:{slug:"/2014/percent/",categorySlug:null},frontmatter:{title:"padding、margin纵向取值问题",date:"2014-12-23T23:30:53.000Z",category:null,description:null}}},{node:{excerpt:"设置一个元素的尺寸，推荐的做法是通过css设置其  width  和  height 。不过今天我们说说一个特例： canvas 。本文内容比较简单，我不做示例。 常见的设置 元素尺寸有两种方法。 给 canvas 元素设置属性，例如： 2 .  给 canvas…",fields:{slug:"/2014/canvassize/",categorySlug:"/categories/技术/"},frontmatter:{title:"canvas元素的宽高",date:"2014-12-23T22:56:06.000Z",category:"技术",description:null}}},{node:{excerpt:"我觉得在前端开发中过多地考虑算法没有太多实际的意义。但这仅仅是我觉得，我并没有证据证明这一点。那为何不来尝试一下，面对一个特定的任务，我将使用不同的算法来实现，看看究竟效率相差多少。今天我想通过字符串搜索这一场景来进行测试。 测试场景 主字符串就以ABC…",fields:{slug:"/2014/string/",categorySlug:null},frontmatter:{title:"javascript实现各种字符串搜索算法",date:"2014-12-16T22:26:51.000Z",category:null,description:null}}},{node:{excerpt:"技能get√ 先说一个需求，我想给一个元素应用另外一个指定元素的样式，应该怎么做？对于一个特定的项目，我想通常做法是规范代码风格，直接把class复制过来就可以了。但现实情况可能并不会如此简单。比如我们假定这个指定元素是不可预测的，它的样式可能由class…",fields:{slug:"/2014/copystyle/",categorySlug:null},frontmatter:{title:"另辟蹊径复制样式",date:"2014-08-20T22:49:26.000Z",category:null,description:null}}},{node:{excerpt:"phantomjs实现了一个无界面的webkit浏览器。虽然没有界面，但dom渲染、js运行、网络访问、canvas/svg绘制等功能都很完备，在页面抓取、页面输出、自动化测试等方面有广泛的应用。 安装 下载phantomjs…",fields:{slug:"/2014/phantomjs/",categorySlug:null},frontmatter:{title:"phantomjs使用说明",date:"2014-03-19T22:47:40.000Z",category:null,description:null}}},{node:{excerpt:"Node.js中与生俱来的单线程编程、回调函数异步式风格让我们有时喜有时忧。先说单线程，很多人会费解于Node.js的单线程如何能做到高并发？这个问题不是本文重点，点到为止。澄清一点，Node.js的单线程仅仅指javascript…",fields:{slug:"/2014/sync/",categorySlug:null},frontmatter:{title:"在Node.js中实现阻塞",date:"2014-03-18T22:45:57.000Z",category:null,description:null}}},{node:{excerpt:"Application Cache  是HTML5为web应用离线使用而增加的api，虽然都是有关存储，但与LocalStorage、 Cookie、SessionStorage有相当大的不同。Application Cache…",fields:{slug:"/2014/applicationcache/",categorySlug:"/categories/技术/"},frontmatter:{title:"Application Cache",date:"2014-03-14T22:40:00.000Z",category:"技术",description:null}}},{node:{excerpt:"fiber/纤程 在操作系统中，除了进程和线程外，还有一种较少应用的 纤程 （fiber…",fields:{slug:"/2014/fibers/",categorySlug:null},frontmatter:{title:"fibers in Node.js",date:"2014-03-13T22:38:40.000Z",category:null,description:null}}},{node:{excerpt:"Javascript之所以为Javascript，很重要的原因是浏览器为其实现了DOM和BOM接口（ 参考 ）。但在Node.js环境下，并没有DOM和BOM，所以html文档与其他类型的文档并无不同，很难进行处理。而前端大量的js类库在Node.js…",fields:{slug:"/2014/nodedom/",categorySlug:null},frontmatter:{title:"如何在Node.js环境下操作DOM",date:"2014-03-05T22:32:36.000Z",category:null,description:null}}},{node:{excerpt:"…",fields:{slug:"/2013/load/",categorySlug:"/categories/技术/"},frontmatter:{title:"CSS性能优化系列之加载原理",date:"2013-07-27T22:20:13.000Z",category:"技术",description:null}}},{node:{excerpt:"在偶然打开 d3  的源代码的时候，我看到了这样一段代码。 大体上可以看出这是在 Date 对象中加入一个 now 方法以获得当前时间。但是 return +new Date; 似乎是一种很不合常规的写法，这个 + 是干什么用的呢？其实这里并没有用到很高级的javascript…",fields:{slug:"/2013/unaryoperator/",categorySlug:"/categories/技术/"},frontmatter:{title:"从 +new Date 说起，Javascript的一元操作符",date:"2013-07-09T22:16:49.000Z",category:"技术",description:null}}},{node:{excerpt:"网页中元素居中的需求很普遍，今天就要谈谈相对比较简单，使用场合更多的水平居中。 行级元素居中 我们知道css中有一个text-align的属性来定义子元素的水平对齐，不过它仅对行级元素生效。一种思路就是我们将想要居中的元素规定成inline或inline-block…",fields:{slug:"/2013/center/",categorySlug:"/categories/技术/"},frontmatter:{title:"网页中元素实现水平居中的方法",date:"2013-07-01T22:12:31.000Z",category:"技术",description:null}}}]}},pathContext:{}}}});
//# sourceMappingURL=path---index-6d2b228764b37da8c56a.js.map